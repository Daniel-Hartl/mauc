[
    {
        "id": "8b33a75140b4c1c4",
        "type": "tab",
        "label": "ESP Verbindung",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "878269b1931fc16e",
        "type": "debug",
        "z": "8b33a75140b4c1c4",
        "name": "heartrate",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 680,
        "wires": []
    },
    {
        "id": "b48ceda52d5328e5",
        "type": "serial in",
        "z": "8b33a75140b4c1c4",
        "name": "ESP32",
        "serial": "cb8f0664a10d179c",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "993a68a11668f909",
                "350cfd9d63315738"
            ]
        ]
    },
    {
        "id": "993a68a11668f909",
        "type": "function",
        "z": "8b33a75140b4c1c4",
        "name": "heartRate from buffer",
        "func": "var heartRate = 0.0;\nvar i = 0;\n\n// split the serial protocol of 1 second into seperate messages.\nvar words = msg.payload.split(\"\\r\\n\");\n\n// seperate each message in single values for o2 and heartrate.\nwords.forEach(function (item) {\n    if(item.includes(\";\"))\n    {\n        var values = item.split(\";\");\n        if(!isNaN(values[0]))\n        {\n            // add all valid heart rate values and count them.\n            heartRate = parseFloat(heartRate) + parseFloat(values[0]);\n            i = i + 1;\n        }\n    }\n});\n\n// return the average value of the heartrate values.\nreturn [ {payload: heartRate / i}];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 200,
        "wires": [
            [
                "084a0948000f3c6e",
                "4b2ae43571c194eb",
                "ecc73652bc194d7f"
            ]
        ],
        "inputLabels": [
            "Message"
        ],
        "outputLabels": [
            "Tuple"
        ]
    },
    {
        "id": "350cfd9d63315738",
        "type": "function",
        "z": "8b33a75140b4c1c4",
        "name": "o2 from buffer",
        "func": "var o2 = 0.0;\nvar i = 0;\n\n// split the serial protocol of 1 second into seperate messages.\nvar words = msg.payload.split(\"\\r\\n\");\n\n// seperate each message in single values for o2 and heartrate.\nwords.forEach(function (item) {\n    if(item.includes(\";\"))\n    {\n        var values = item.split(\";\");\n        if(!isNaN(values[1]))\n        {\n            // add all valid o2 values and count them.\n            o2 = parseFloat(o2) + parseFloat(values[1]);\n            i = i + 1;\n        }\n    }\n});\n\n// return the average o2 value in payload.\nreturn [{ payload: o2 / i, topic: 2 }];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 280,
        "wires": [
            [
                "bb49e0bdad553d0f",
                "f70fa8495ad5300d"
            ]
        ]
    },
    {
        "id": "48217d26abfc5f1d",
        "type": "debug",
        "z": "8b33a75140b4c1c4",
        "name": "ERRORS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 420,
        "wires": []
    },
    {
        "id": "9bca16f647a725ad",
        "type": "mqtt in",
        "z": "8b33a75140b4c1c4",
        "name": "Data Subscription",
        "topic": "afkdcdjkcnks/sensor/data/raw/sensor",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "8f89c04dd76d75b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 680,
        "wires": [
            [
                "878269b1931fc16e"
            ]
        ]
    },
    {
        "id": "3d983b677ba5a051",
        "type": "mqtt out",
        "z": "8b33a75140b4c1c4",
        "name": "Data Publish",
        "topic": "afkdcdjkcnks/sensor/data/raw/sensor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8f89c04dd76d75b8",
        "x": 1170,
        "y": 240,
        "wires": []
    },
    {
        "id": "ddea86ab0ffe1c7f",
        "type": "catch",
        "z": "8b33a75140b4c1c4",
        "name": "ERROR",
        "scope": null,
        "uncaught": false,
        "x": 210,
        "y": 420,
        "wires": [
            [
                "48217d26abfc5f1d"
            ]
        ]
    },
    {
        "id": "dd268ddfed75aeb0",
        "type": "mqtt out",
        "z": "8b33a75140b4c1c4",
        "name": "Control Publish",
        "topic": "afkdcdjkcnks/sensor/ctrl/raw/sensor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8f89c04dd76d75b8",
        "x": 1180,
        "y": 780,
        "wires": []
    },
    {
        "id": "48ecde213ad546ab",
        "type": "mqtt in",
        "z": "8b33a75140b4c1c4",
        "name": "Control Subscription",
        "topic": "afkdcdjkcnks/sensor/ctrl/raw/sensor",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "8f89c04dd76d75b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 340,
        "wires": [
            [
                "c6f69724bf69ec76",
                "0e1be5abaea0583c"
            ]
        ]
    },
    {
        "id": "0e1be5abaea0583c",
        "type": "debug",
        "z": "8b33a75140b4c1c4",
        "name": "control message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 360,
        "wires": []
    },
    {
        "id": "084a0948000f3c6e",
        "type": "ui_chart",
        "z": "8b33a75140b4c1c4",
        "name": "",
        "group": "6a47f1a43bf36502",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Herzfrequenz [bpm]",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "200",
        "removeOlder": "10",
        "removeOlderPoints": "600",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#8080ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 590,
        "y": 240,
        "wires": [
            [
                "78affe2ac9bd7de5"
            ]
        ]
    },
    {
        "id": "c6f69724bf69ec76",
        "type": "change",
        "z": "8b33a75140b4c1c4",
        "name": "Set mode flag",
        "rules": [
            {
                "t": "set",
                "p": "mode",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "78affe2ac9bd7de5",
        "type": "function",
        "z": "8b33a75140b4c1c4",
        "name": "Add topic Graph",
        "func": "return [{ payload: msg.payload, topic: 1 }];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 240,
        "wires": [
            [
                "bb49e0bdad553d0f"
            ]
        ]
    },
    {
        "id": "bb49e0bdad553d0f",
        "type": "switch",
        "z": "8b33a75140b4c1c4",
        "name": "publish block",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "mode",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 990,
        "y": 240,
        "wires": [
            [
                "3d983b677ba5a051"
            ]
        ]
    },
    {
        "id": "72858003853430d1",
        "type": "inject",
        "z": "8b33a75140b4c1c4",
        "name": "bpm",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 210,
        "y": 740,
        "wires": [
            [
                "dd268ddfed75aeb0"
            ]
        ]
    },
    {
        "id": "a1ccea1da2dc852a",
        "type": "inject",
        "z": "8b33a75140b4c1c4",
        "name": "graph",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 210,
        "y": 780,
        "wires": [
            [
                "dd268ddfed75aeb0"
            ]
        ]
    },
    {
        "id": "136551235160d790",
        "type": "inject",
        "z": "8b33a75140b4c1c4",
        "name": "o2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 210,
        "y": 820,
        "wires": [
            [
                "dd268ddfed75aeb0"
            ]
        ]
    },
    {
        "id": "4b2ae43571c194eb",
        "type": "ui_text",
        "z": "8b33a75140b4c1c4",
        "group": "6a47f1a43bf36502",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Herzfrequez",
        "format": "{{msg.payload}} bpm",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 200,
        "wires": []
    },
    {
        "id": "f70fa8495ad5300d",
        "type": "ui_text",
        "z": "8b33a75140b4c1c4",
        "group": "6a47f1a43bf36502",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Sauerstoffgehalt",
        "format": "{{msg.payload}} %",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 580,
        "y": 300,
        "wires": []
    },
    {
        "id": "ecc73652bc194d7f",
        "type": "function",
        "z": "8b33a75140b4c1c4",
        "name": "Add topic heartRate",
        "func": "return [{ payload: msg.payload, topic: 0 }];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 160,
        "wires": [
            [
                "bb49e0bdad553d0f"
            ]
        ]
    },
    {
        "id": "cb8f0664a10d179c",
        "type": "serial-port",
        "name": "Serial 14",
        "serialport": "COM14",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "1000",
        "bin": "false",
        "out": "time",
        "addchar": "",
        "responsetimeout": ""
    },
    {
        "id": "8f89c04dd76d75b8",
        "type": "mqtt-broker",
        "name": "hive",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6a47f1a43bf36502",
        "type": "ui_group",
        "name": "Übersicht",
        "tab": "2c798895b47107aa",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2c798895b47107aa",
        "type": "ui_tab",
        "name": "Gesamt",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]