[
    {
        "id": "8b33a75140b4c1c4",
        "type": "tab",
        "label": "ESP Verbindung",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "878269b1931fc16e",
        "type": "debug",
        "z": "8b33a75140b4c1c4",
        "name": "heartrate",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 380,
        "wires": []
    },
    {
        "id": "b48ceda52d5328e5",
        "type": "serial in",
        "z": "8b33a75140b4c1c4",
        "name": "ESP32",
        "serial": "cb8f0664a10d179c",
        "x": 330,
        "y": 240,
        "wires": [
            [
                "993a68a11668f909",
                "350cfd9d63315738"
            ]
        ]
    },
    {
        "id": "993a68a11668f909",
        "type": "function",
        "z": "8b33a75140b4c1c4",
        "name": "heartRate from buffer",
        "func": "var heartRate = 0.0;\nvar i = 0;\n\nvar words = msg.payload.split(\"\\r\\n\");\nwords.forEach(function (item) {\n    if(item.includes(\";\"))\n    {\n        var values = item.split(\";\");\n        if(!isNaN(values[0]))\n        {\n            heartRate = parseFloat(heartRate) + parseFloat(values[0]);\n            i = i + 1;\n        }\n    }\n});\n\nreturn [ {payload: heartRate / i}];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 200,
        "wires": [
            [
                "3d983b677ba5a051"
            ]
        ],
        "inputLabels": [
            "Message"
        ],
        "outputLabels": [
            "Tuple"
        ]
    },
    {
        "id": "350cfd9d63315738",
        "type": "function",
        "z": "8b33a75140b4c1c4",
        "name": "o2 from buffer",
        "func": "var o2 = 0.0;\nvar i = 0;\n\nvar words = msg.payload.split(\"\\r\\n\");\nwords.forEach(function (item) {\n    if(item.includes(\";\"))\n    {\n        var values = item.split(\";\");\n        if(!isNaN(values[1]))\n        {\n            o2 = parseFloat(o2) + parseFloat(values[1]);\n            i = i + 1;\n        }\n    }\n});\n\nreturn [ {payload: o2 / i}];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "dd268ddfed75aeb0"
            ]
        ]
    },
    {
        "id": "48217d26abfc5f1d",
        "type": "debug",
        "z": "8b33a75140b4c1c4",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 540,
        "wires": []
    },
    {
        "id": "9bca16f647a725ad",
        "type": "mqtt in",
        "z": "8b33a75140b4c1c4",
        "name": "",
        "topic": "afkdcdjkcnks/sensor/heartRate/raw/sensor",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "8f89c04dd76d75b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 680,
        "y": 380,
        "wires": [
            [
                "878269b1931fc16e"
            ]
        ]
    },
    {
        "id": "3d983b677ba5a051",
        "type": "mqtt out",
        "z": "8b33a75140b4c1c4",
        "name": "heartrate MQTT",
        "topic": "afkdcdjkcnks/sensor/heartRate/raw/sensor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8f89c04dd76d75b8",
        "x": 960,
        "y": 200,
        "wires": []
    },
    {
        "id": "ddea86ab0ffe1c7f",
        "type": "catch",
        "z": "8b33a75140b4c1c4",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 340,
        "y": 540,
        "wires": [
            [
                "48217d26abfc5f1d"
            ]
        ]
    },
    {
        "id": "dd268ddfed75aeb0",
        "type": "mqtt out",
        "z": "8b33a75140b4c1c4",
        "name": "o2 MQTT",
        "topic": "afkdcdjkcnks/sensor/o2/raw/sensor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8f89c04dd76d75b8",
        "x": 940,
        "y": 280,
        "wires": []
    },
    {
        "id": "48ecde213ad546ab",
        "type": "mqtt in",
        "z": "8b33a75140b4c1c4",
        "name": "",
        "topic": "afkdcdjkcnks/sensor/o2/raw/sensor",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "8f89c04dd76d75b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 660,
        "y": 460,
        "wires": [
            [
                "0e1be5abaea0583c"
            ]
        ]
    },
    {
        "id": "0e1be5abaea0583c",
        "type": "debug",
        "z": "8b33a75140b4c1c4",
        "name": "o2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 460,
        "wires": []
    },
    {
        "id": "cb8f0664a10d179c",
        "type": "serial-port",
        "name": "Serial 14",
        "serialport": "COM14",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "1000",
        "bin": "false",
        "out": "time",
        "addchar": "",
        "responsetimeout": ""
    },
    {
        "id": "8f89c04dd76d75b8",
        "type": "mqtt-broker",
        "name": "hive",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]