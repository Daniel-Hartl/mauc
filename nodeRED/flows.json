[
    {
        "id": "faeff8b338da8c6e",
        "type": "tab",
        "label": "ESP Verbindung",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5ee38c0cdd8feb68",
        "type": "debug",
        "z": "faeff8b338da8c6e",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 380,
        "wires": []
    },
    {
        "id": "a4428fc4b9a7fb79",
        "type": "serial in",
        "z": "faeff8b338da8c6e",
        "name": "ESP32",
        "serial": "cb8f0664a10d179c",
        "x": 450,
        "y": 420,
        "wires": [
            [
                "9c7eb68bd09b2ce1",
                "56e9bc0d65ca7f46"
            ]
        ]
    },
    {
        "id": "9c7eb68bd09b2ce1",
        "type": "function",
        "z": "faeff8b338da8c6e",
        "name": "heartRate from buffer",
        "func": "var heartRate = 0.0;\nvar i = 0;\n\nvar words = msg.payload.split(\"\\r\\n\");\nwords.forEach(function (item) {\n    if(item.includes(\";\"))\n    {\n        var values = item.split(\";\");\n        if(!isNaN(values[0]))\n        {\n            heartRate = parseFloat(heartRate) + parseFloat(values[0]);\n            i = i + 1;\n        }\n    }\n});\n\nreturn [ {payload: heartRate / i}];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 380,
        "wires": [
            [
                "5ee38c0cdd8feb68"
            ]
        ],
        "inputLabels": [
            "Message"
        ],
        "outputLabels": [
            "Tuple"
        ]
    },
    {
        "id": "56e9bc0d65ca7f46",
        "type": "function",
        "z": "faeff8b338da8c6e",
        "name": "o2 from buffer",
        "func": "var o2 = 0.0;\nvar i = 0;\n\nvar words = msg.payload.split(\"\\r\\n\");\nwords.forEach(function (item) {\n    if(item.includes(\";\"))\n    {\n        var values = item.split(\";\");\n        if(!isNaN(values[1]))\n        {\n            o2 = parseFloat(o2) + parseFloat(values[1]);\n            i = i + 1;\n        }\n    }\n});\n\nreturn [ {payload: o2 / i}];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 480,
        "wires": [
            [
                "27a27dc0777dd01a"
            ]
        ]
    },
    {
        "id": "27a27dc0777dd01a",
        "type": "debug",
        "z": "faeff8b338da8c6e",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 480,
        "wires": []
    },
    {
        "id": "cb8f0664a10d179c",
        "type": "serial-port",
        "name": "Serial 14",
        "serialport": "COM14",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "1000",
        "bin": "false",
        "out": "time",
        "addchar": "",
        "responsetimeout": ""
    }
]